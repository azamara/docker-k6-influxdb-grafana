apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: influxdb-claim0
  name: influxdb-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ./docker-compose.yml
    kompose.version: 1.16.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: influxdb
  name: influxdb
spec:
  ports:
  - name: "8083"
    port: 8083
    targetPort: 8083
  - name: "8086"
    port: 8086
    targetPort: 8086
  - name: "8090"
    port: 8090
    targetPort: 8090
  selector:
    io.kompose.service: influxdb
status:
  loadBalancer: {}

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ./docker-compose.yml
    kompose.version: 1.16.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: influxdb
  name: influxdb
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: influxdb
    spec:
      containers:
      - env:
        - name: INFLUXDB_DATA_ENGINE
          value: tsm1
        - name: INFLUXDB_HTTP_MAX_BODY_SIZE
          value: "0"
        - name: INFLUXDB_REPORTING_DISABLED
          value: "false"
        image: influxdb:latest
        name: influxdb
        ports:
        - containerPort: 8083
        - containerPort: 8086
        - containerPort: 8090
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/influxdb
          name: influxdb-claim0
      restartPolicy: Always
      volumes:
      - name: influxdb-claim0
        persistentVolumeClaim:
          claimName: influxdb-claim0
status: {}
